#use "gbamenu.ic"
#use "createlib.ic" 
#use "xbccamlib.ic"
#include "coverlib_4.ic"
#include "goto_4.ic"

/* This program causes the create to execute the cover command until it sees an object matching the color in color
   model 0 (red).  It then moves towards that object.At that point the robot will stop, activate the arm, and pick it up.
   Created By: Austin Kosin
*/
int red=0;
int green=1;

void main(){
    char a[2][16]={"RCO Code", "Disconnect"};
    int sel=0;
    
    while(1) {
        sel = select_string(a, sel);
        if(sel==-1) {
            printf("Exit\n");
            break;
        }
        else if(sel == 0) mainProgram();
        else if(sel == 1) create_disconnect();
    }
}



void mainProgram()
{
    int hasball=0;
    int tx, lspeed, rspeed;//tx is the coordinate of the centroid of the tracked object; if tx=174, object is centered
    init_camera(); // start up xbc camera system
    create_connect(); // start up communication with the create
    display_clear(); // clear display
    printf("SEARCHING FOR OBJECTS!!!\n");
    while(!b_button()){
        track_update(); // get a new image into the xbc
        if (track_count(green)) {//if no obstacles, are there any blobs on channel 1?
            
            
            gotoGreenBall();
            enable_servos();
            sleep(1.0);
            set_servo_position(0,200);
            mrp(1,1000,325L);
            sleep(7.0);
            set_servo_position(0,1);
            sleep(2.0);
            mrp(1,500,-800L);
            sleep(7.0);
            ao();
            hasball=1;
            track_update(); // get a new image into the xbc
        }
        else{
            cover(green);
        }
        
        
        while(hasball){
            
            if (track_count(red)) {//if no obstacles, are there any blobs on channel 0?
                
                gotoRedCup();
                enable_servos();
                mrp(1,1000,325L);
                sleep(5.0);
                set_servo_position(0,200);
                sleep(3.0);
                mrp(1,1000,-330L);
                sleep(4.0);
                hasball=0;
            }
            else{
                cover(red);
            }
            
            
        }
        
    }
}













